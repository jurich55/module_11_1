import requests as rq
import pandas as pd
import numpy as np

print('----------------------------<< Requests >>--------------------------------------')
'''1. << Requests — это элегантная и простая HTTP-библиотека для Python >>
                 Requests готов для современного Интернета
        Requests позволяет очень легко отправлять HTTP/1.1-запросы.
    Hе нужно вручную добавлять строки запроса в URL-адреса или кодировать данные POST.
 Благодаря urllib3 поддержка активности и пул HTTP-соединений работают на 100% автоматически.'''

r = rq.get('https://api.github.com/user', auth=('user', 'pass'))
r.status_code = 200
print(r.json())      # Печать JSON-ответа от GitHub
             # запрос на получение веб-страницы
r = rq.get('https://api.github.com/events')
     # можно отправить HTTP-запрос POST
r1 = rq.post('https://httpbin.org/post', data={'ключ': 'значение'})
            # другие типы HTTP-запросов
r = rq.put('https://httpbin.org/put', data={'ключ': 'значение'})
r = rq.delete('https://httpbin.org/delete')
r = rq.head('https://httpbin.org/get')
r = rq.options('https://httpbin.org/get')

print('----------------------------пакет  Pandas---------------------------------------')
'''2. << Pandas - это пакет Python, который предоставляет быстрые, гибкие и выразительные
    структуры данных, предназначенные для того, чтобы сделать работу с "реляционными" или 
             "помеченными" данными простой и интуитивно понятной.
  Это фундаментальный высокоуровневый строительный блок для выполнения практического анализа данных
     в реальном мире на Python. Кроме того, у него более широкая цель - стать самым мощным
      и гибким инструментом анализа / манипулирования данными с открытым исходным кодом,
                               доступным на любом языке.'''
# Создание DataFrame из списка словарей
data = [{'name': 'Денис', 'age': 30}, {'name': 'Макс', 'age': 25}]
df = pd.DataFrame(data)

print(df)
print()

# Фильтрация данных по условию
older_than_25 = df[df['age'] > 25]
print(older_than_25)
print()

# Группировка данных по столбцу
grouped_by_age = df.groupby('age')
print(grouped_by_age)
print()

# Сортировка данных по столбцам
sorted_df = df.sort_values(['age'], ascending=False)
print(sorted_df)
print()

# Агрегация данных
total_ages = df['age'].sum()
print(f"Сумма возрастов: {total_ages}")
print("\n Код pandas завершён \n")

print('----------------------------пакет  NumPy----------------------------------------')
'''3.  << NumPy - это фундаментальный пакет для научных вычислений на Python >>
   Высокоуровневый синтаксис NumPy делает его доступным и продуктивным для программистов
              с любым образованием или опытом работы. 
    NumPy предлагает широкий спектр математических функций, генераторов случайных чисел,
     подпрограмм линейной алгебры, преобразований Фурье и многое другое.'''

data = np.array([1, 2])
ones = np.ones(2, dtype=int)
print(data + ones)

a = np.array([[0.45053314, 0.17296777, 0.34376245, 0.5510652],
              [0.54627315, 0.05093587, 0.40067661, 0.55645993],
              [0.12697628, 0.82485143, 0.26590556, 0.56917101]])
print(a.sum())
print(a.min(axis=0))



